// <auto-generated />
using System;
using BootRent.DAL.Data.Context.Rent;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BootRent.DAL.Migrations.Rent
{
    [DbContext(typeof(RentContext))]
    [Migration("20231219211248_Seeding2")]
    partial class Seeding2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BootRent.DAL.Data.Models.Boot", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BootName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductionYear")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Boots");

                    b.HasData(
                        new
                        {
                            Id = new Guid("19350dbc-3b7d-4279-81d5-d0de467d793f"),
                            BootName = "BootName1",
                            CreatedAt = new DateTime(2015, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            Manufacturer = "Manufacturer1",
                            ProductionYear = 1999
                        },
                        new
                        {
                            Id = new Guid("a4727a9f-5218-45f6-ac11-3652862807e4"),
                            BootName = "BootName2",
                            CreatedAt = new DateTime(2018, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            Manufacturer = "Manufacturer2",
                            ProductionYear = 2004
                        },
                        new
                        {
                            Id = new Guid("69a32e79-2dd8-4ffd-af6a-4aa870e7f62d"),
                            BootName = "BootName1",
                            CreatedAt = new DateTime(2022, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            Manufacturer = "Manufacturer1",
                            ProductionYear = 2009
                        });
                });

            modelBuilder.Entity("BootRent.DAL.Data.Models.Package", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PackageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Packages");

                    b.HasData(
                        new
                        {
                            Id = new Guid("02ca7042-6dbd-46f8-ba44-3ec67876b056"),
                            Description = "Celebrate your birthday with style",
                            PackageName = "Birthday",
                            Price = 800.00m
                        },
                        new
                        {
                            Id = new Guid("26f3bcb3-7d33-4027-a13d-669063071b34"),
                            Description = "Celebrate your birthday with style",
                            PackageName = "Birthday Package",
                            Price = 800.00m
                        },
                        new
                        {
                            Id = new Guid("d709e572-be55-41fb-927f-9d962b6dd93a"),
                            Description = "Perfect for hosting events and parties",
                            PackageName = "Party Package",
                            Price = 1000.00m
                        },
                        new
                        {
                            Id = new Guid("ca14a971-3c20-4020-9e0a-aa3cbd131b2f"),
                            Description = "Perfect for weddings events and parties",
                            PackageName = "Wedding Package",
                            Price = 1500.00m
                        });
                });

            modelBuilder.Entity("BootRent.DAL.Data.Models.Reservation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BootId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BootId");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3c7198a7-dbad-4b85-b631-34fda816fd56"),
                            BootId = new Guid("19350dbc-3b7d-4279-81d5-d0de467d793f"),
                            CheckInDate = new DateTime(2023, 12, 20, 0, 12, 48, 323, DateTimeKind.Local).AddTicks(1353),
                            CheckOutDate = new DateTime(2024, 1, 4, 0, 12, 48, 323, DateTimeKind.Local).AddTicks(1366)
                        },
                        new
                        {
                            Id = new Guid("9b2775a8-1598-4696-adbe-025c6077acdf"),
                            BootId = new Guid("a4727a9f-5218-45f6-ac11-3652862807e4"),
                            CheckInDate = new DateTime(2023, 12, 20, 0, 12, 48, 323, DateTimeKind.Local).AddTicks(1380),
                            CheckOutDate = new DateTime(2023, 12, 30, 0, 12, 48, 323, DateTimeKind.Local).AddTicks(1381)
                        },
                        new
                        {
                            Id = new Guid("0519e3ac-4f8f-4d5d-91ad-6df05b296759"),
                            BootId = new Guid("69a32e79-2dd8-4ffd-af6a-4aa870e7f62d"),
                            CheckInDate = new DateTime(2023, 12, 20, 0, 12, 48, 323, DateTimeKind.Local).AddTicks(1384),
                            CheckOutDate = new DateTime(2024, 1, 9, 0, 12, 48, 323, DateTimeKind.Local).AddTicks(1385)
                        });
                });

            modelBuilder.Entity("BootRent.DAL.Data.Models.Package", b =>
                {
                    b.HasOne("BootRent.DAL.Data.Models.Reservation", "Reservation")
                        .WithOne("Package")
                        .HasForeignKey("BootRent.DAL.Data.Models.Package", "Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("BootRent.DAL.Data.Models.Reservation", b =>
                {
                    b.HasOne("BootRent.DAL.Data.Models.Boot", "Boot")
                        .WithMany("Reservations")
                        .HasForeignKey("BootId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Boot");
                });

            modelBuilder.Entity("BootRent.DAL.Data.Models.Boot", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("BootRent.DAL.Data.Models.Reservation", b =>
                {
                    b.Navigation("Package");
                });
#pragma warning restore 612, 618
        }
    }
}
