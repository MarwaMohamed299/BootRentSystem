// <auto-generated />
using System;
using BootRent.DAL.Data.Context.Rent;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BootRent.DAL.Migrations.Rent
{
    [DbContext(typeof(RentContext))]
    [Migration("20231219213421_Seeding3")]
    partial class Seeding3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BootRent.DAL.Data.Models.Boot", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BootName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductionYear")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Boots");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8ca42489-2d55-4e18-980c-9d20e2cf6dc5"),
                            BootName = "BootName1",
                            CreatedAt = new DateTime(2015, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            Manufacturer = "Manufacturer1",
                            ProductionYear = 1999
                        },
                        new
                        {
                            Id = new Guid("81f28fe4-4b11-4425-af9b-41812f92398d"),
                            BootName = "BootName2",
                            CreatedAt = new DateTime(2018, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            Manufacturer = "Manufacturer2",
                            ProductionYear = 2004
                        },
                        new
                        {
                            Id = new Guid("549b92b0-0be0-4d70-ab28-3eeb92cba05e"),
                            BootName = "BootName1",
                            CreatedAt = new DateTime(2022, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            Manufacturer = "Manufacturer1",
                            ProductionYear = 2009
                        });
                });

            modelBuilder.Entity("BootRent.DAL.Data.Models.Package", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PackageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ReservationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ReservationId")
                        .IsUnique();

                    b.ToTable("Packages");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3e3a53f4-02ef-4d97-822a-886ee8f8abf4"),
                            Description = "Celebrate your birthday with style",
                            PackageName = "Birthday",
                            Price = 800.00m,
                            ReservationId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("572c67d2-e7cf-465e-ad96-c5e63cddc6ac"),
                            Description = "Celebrate your birthday with style",
                            PackageName = "Birthday Package",
                            Price = 800.00m,
                            ReservationId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("304becc9-220e-4e30-b0fb-a02d77ace21a"),
                            Description = "Perfect for hosting events and parties",
                            PackageName = "Party Package",
                            Price = 1000.00m,
                            ReservationId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("3192fb4f-d0aa-4335-bc81-22f1131af0da"),
                            Description = "Perfect for weddings events and parties",
                            PackageName = "Wedding Package",
                            Price = 1500.00m,
                            ReservationId = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("BootRent.DAL.Data.Models.Reservation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BootId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PackageId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BootId");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("663a064c-e2dc-45f3-a86e-7ceea14c6bb1"),
                            BootId = new Guid("8ca42489-2d55-4e18-980c-9d20e2cf6dc5"),
                            CheckInDate = new DateTime(2023, 12, 20, 0, 34, 21, 395, DateTimeKind.Local).AddTicks(2073),
                            CheckOutDate = new DateTime(2024, 1, 4, 0, 34, 21, 395, DateTimeKind.Local).AddTicks(2084),
                            PackageId = new Guid("572c67d2-e7cf-465e-ad96-c5e63cddc6ac")
                        },
                        new
                        {
                            Id = new Guid("1d104082-d1bc-4c38-8152-e98baaebdcd4"),
                            BootId = new Guid("81f28fe4-4b11-4425-af9b-41812f92398d"),
                            CheckInDate = new DateTime(2023, 12, 20, 0, 34, 21, 395, DateTimeKind.Local).AddTicks(2093),
                            CheckOutDate = new DateTime(2023, 12, 30, 0, 34, 21, 395, DateTimeKind.Local).AddTicks(2094),
                            PackageId = new Guid("304becc9-220e-4e30-b0fb-a02d77ace21a")
                        },
                        new
                        {
                            Id = new Guid("f907b552-0bbf-4f8a-9d7b-dd6756d53e99"),
                            BootId = new Guid("549b92b0-0be0-4d70-ab28-3eeb92cba05e"),
                            CheckInDate = new DateTime(2023, 12, 20, 0, 34, 21, 395, DateTimeKind.Local).AddTicks(2097),
                            CheckOutDate = new DateTime(2024, 1, 9, 0, 34, 21, 395, DateTimeKind.Local).AddTicks(2098),
                            PackageId = new Guid("3e3a53f4-02ef-4d97-822a-886ee8f8abf4")
                        });
                });

            modelBuilder.Entity("BootRent.DAL.Data.Models.Package", b =>
                {
                    b.HasOne("BootRent.DAL.Data.Models.Reservation", "Reservation")
                        .WithOne("Package")
                        .HasForeignKey("BootRent.DAL.Data.Models.Package", "ReservationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("BootRent.DAL.Data.Models.Reservation", b =>
                {
                    b.HasOne("BootRent.DAL.Data.Models.Boot", "Boot")
                        .WithMany("Reservations")
                        .HasForeignKey("BootId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Boot");
                });

            modelBuilder.Entity("BootRent.DAL.Data.Models.Boot", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("BootRent.DAL.Data.Models.Reservation", b =>
                {
                    b.Navigation("Package");
                });
#pragma warning restore 612, 618
        }
    }
}
